% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addSpacerAlignments.R
\name{addSpacerAlignmentsCHOPOFF}
\alias{addSpacerAlignmentsCHOPOFF}
\title{CHOPOFF version of crisprDesign::addSpacerAlignments}
\usage{
addSpacerAlignmentsCHOPOFF(
  guides,
  index_dir,
  out_file = file.path(index_dir, paste0(algorithm, "_", distance, ".csv")),
  algorithm = "prefixHashDB",
  distance = 3,
  validate = TRUE,
  chopoff_path = CHOPOFF_renviron(),
  crisprDesign_message = TRUE
)
}
\arguments{
\item{guides}{character vector of guides, crisprDesign::GuideSet, or
path to txt file of guides.
If file, the file must be a single column, 1 guide per line of correct length,
without a header or row names.}

\item{index_dir}{the directory of the index created during 'build_index'.
Will automatically find the file, as only 1 db can exist in a folder
at the same time per algorithm.}

\item{out_file}{Path to the file where detailed results should
be written.}

\item{algorithm}{default: prefixHashDB, alternatives: TODO: list all here!}

\item{distance}{Maximum edit distance to analyze. Must be less
or equal to the distance that was used when
building db. (default: 3)}

\item{validate}{TRUE, if false, do not check that CHOPOFF path is valid}

\item{chopoff_path}{PATH to CHOPOFF, default install_chopoff()}

\item{crisprDesign_message}{logical, default TRUE. Print the message if not input is of class GuideSet.}
}
\value{
the same GuideSet object with added alignments to \code{mcols(guideSet)[["alignments"]]}.
If input was not of class GuideSet, it returns a GRangesList.
}
\description{
CHOPOFF version of crisprDesign::addSpacerAlignments
}
\examples{
name <- "CAS9"
genome <- system.file("extdata/sample_genome", "semirandom.fa", package = "crisprCHOPOFF")
## Note: a fasta index ".fai" file must exist in directory of genome.
# You can make it with:
#if (!file.exists(paste0(genome, ".fai"))) {
#Rsamtools::indexFa(genome)
#}
out_dir_index <- file.path(tempdir(), "CHOPOFF_sample_genome")
build_index(name, genome, out_dir_index, distance = 2, validate = FALSE)

# Now search some guides
guides <- system.file("extdata/sample_genome", "guides.txt", package = "crisprCHOPOFF")
# Quick preview in guides:
guide_candidates <- read.table(guides, col.names = "guides")
unique(nchar(unlist(guide_candidates))) # Unique lengths of guides
guide_hits <- search_index(guides, out_dir_index, distance = 2, validate = FALSE)
guide_hits_table <- read.table(guide_hits, sep = ",", header = TRUE)
# use data.table::fread for reading in large list
# Subset to 0 distance hits
dist0 <- guide_hits_table[guide_hits_table$distance == 0,]
head(dist0)
# Which chromosomes is a specific guide found on with 0 distance hits?
unique(dist0[dist0$guide == "TCCGGCCTGGTTATCGAAGG",]$chromosome) # 2 chromosomes
}
